AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  stelios-ifttt-service

  Sample SAM Template for stelios-ifttt-service
#TODO: add authorisers for custom api key header
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-controlling-access-to-apis-lambda-authorizer.html

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.8
    Timeout: 30
    Environment:
        Variables: # these will be important later
            DYNAMO_TABLE: !Ref TriggersTable
            #DB_ENDPOINT: http://dynamodb.us-east-1.amazonaws.com
            #REGION_NAME: us-east-1
Resources:
  TriggersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey: 
        Name: triggerId
        Type: String
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Sub "${AWS::StackName}-Stelios-EpicPriceAlert"
      Tags:
        Owner: Stelios
  StatusFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: status/
      Handler: app.lambda_handler
      Events:
        status:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /ifttt/v1/status
            Method: get
  TriggerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: instrument_price/
      Handler: app.lambda_handler
      #TODO: make this more specific Policies: AmazonDynamoDBFullAccess # default IAM policy that allows the lambda to read and write to our soon to be defined Dynamo instance
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref TriggersTable
      Events:
        poll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /ifttt/v1/triggers/instrument_price
            Method: post
        delete:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /ifttt/v1/triggers/instrument_price/trigger_identity/{trigger_id}
            Method: delete

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  TriggersTable:
    Description: "dynamoDb ARN"
    Value: !GetAtt TriggersTable.Arn
  TriggersTable:
    Description: "dynamoDb name"
    Value: !Ref TriggersTable
  StatusFunction:
    Description: "statusFunction ARN"
    Value: !GetAtt StatusFunction.Arn
  StatusFunctionIamRole:
    Description: "Implicit IAM Role created for StatusFunction"
    Value: !GetAtt StatusFunctionRole.Arn
  TriggerFunction:
    Description: "TriggerFunction ARN"
    Value: !GetAtt TriggerFunction.Arn
  TriggerFunctionIamRole:
    Description: "Implicit IAM Role created for TriggerFunction"
    Value: !GetAtt TriggerFunctionRole.Arn
